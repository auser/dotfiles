{{ if eq .chezmoi.os "linux" -}}

{{ $packages := list
     "curl"
     "direnv"
     "git-lfs"
     "jq"
     "golang"
     "docker"
     "docker-compose"
     "libssl-dev"
     "ripgrep"
     "units"
     "python3"
     "python3-pip"
     "vim"
     "fzf"
     "zsh" -}}
{{ $classicSnaps := list -}}

{{ if .isovalent -}}
{{   $packages = concat $packages (list
       "build-essential"
       "clang"
       "libelf-dev"
       "llvm"
       "protobuf-compiler"
       "python3-pip"
       "vagrant"
       "virtualbox") -}}
{{   $classicSnaps = concat $classicSnaps (list
       "google-cloud-sdk") -}}
{{ end -}}

{{ if not .headless -}}
{{   $packages = mustAppend $packages "vim-gtk" -}}
{{   $classicSnaps = mustAppend $classicSnaps "code" -}}
{{ end -}}

{{ if .personal -}}
{{   $classicSnaps = mustAppend $classicSnaps "goreleaser" -}}
{{ end -}}

{{ $sudo := "sudo " -}}
{{ if eq .chezmoi.username "root" -}}
{{   $sudo = "" -}}
{{ end -}}

#!/bin/bash

set -eufo pipefail

{{ $sudo }}apt-get update
{{ $sudo }}apt-get install -y {{ $packages | join " " }}

## Install nvm
#curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
#nvm install v16.4.2 2>/dev/null
#nvm alias default v16.4.2 2>/dev/null

# Install NVM
nvm_dir="$HOME/.nvm"
nvm_url=https://github.com/nvm-sh/nvm.git
if [ -d "$nvm_dir" ]; then
  nvm_existing_remote=$(git -C "$nvm_dir" remote get-url origin)
  if [ "$nvm_existing_remote" != "$nvm_url" ]; then
    echo "NVM already exists in $nvm_dir but its remote is set incorrectly"
    exit 1
  else
    git -C "$nvm_dir" fetch
  fi
else
  git -C "$nvm_dir" clone https://github.com/nvm-sh/nvm.git "$nvm_dir"
fi
git -C "$nvm_dir" checkout "$(git -C "$nvm_dir" describe --abbrev=0 --tags --match "v[0-9]*" "$(git -C "$nvm_dir" rev-list --tags -1)")"

# Install LTS NodeJS
set +x
\. "$nvm_dir/nvm.sh" > /dev/null
nvm install --lts
set -x

## Install antibody
{{ if eq .chezmoi.os "darwin" }}
brew install antibody
{{ else if eq .chezmoi.os "linux" }}
curl -sfL git.io/antibody | sh -s - -b /usr/local/bin
{{- end }}

## Installing rust
{{ if eq .chezmoi.os "darwin"}}
 ## Install rust
{{ else if eq .chezmoi.os "linux" }}
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
{{- end }}

echo "Installing: starship ********************"
sh -c "$(curl -fsSL https://starship.rs/install.sh)" -- --yes

if [[ ! -d "$HOME/.oh-my-zsh/themes/spaceship-prompt" ]]; then
  git clone https://github.com/spaceship-prompt/spaceship-prompt.git "$HOME/.oh-my-zsh/themes/spaceship-prompt" --depth=1
fi

# Install nvm
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash

# Install spacemacs
#git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d

# Install yarn
npm i -g corepack

source $HOME/.cargo/env

#{{ range $classicSnaps }}
#{{ $sudo }}snap install --classic {{ . }}
#{{ end }}

## Install cargo-edit
cargo install cargo-edit

{{ if eq .chezmoi.os "darwin"}}
 ## Install just
 brew install just
{{ else if eq .chezmoi.os "linux" }}
  cargo install just
{{- end }}

echo "Installing: nvim ********************"
DISPLAY= pip3 install --user pynvim
curl -LO https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
chmod u+x nvim.appimage
mv nvim.appimage /usr/local/bin

echo "Installing: lunarvim ******************"
{{ if (eq .chezmoi.os "linux" "darwin") }}
wget -O /tmp/install_lvim.sh https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh
chmod u+x /tmp/install_lvim.sh
DISPLAY= /tmp/install_lvim.sh -y
{{ end -}}

echo "Installing nerd fonts ****************"
git clone https://github.com/ronniedroid/getnf.git /tmp/getnf
cd /tmp/getnf
./install.sh

echo "Setting up zsh ******************************"
sudo chsh -s /bin/zsh $(whoami)

{{ end }}
