{{ if eq .chezmoi.os "linux" -}}

{{ $packages := list
     "curl"
     "git-lfs"
     "jq"
     "golang"
     "gpg"
     "docker"
     "docker-compose"
     "libssl-dev"
     "ripgrep"
     "units"
     "python3"
     "python3-pip"
     "vim"
     "fzf"
     "zsh" -}}
{{ $classicSnaps := list -}}

{{ if .isovalent -}}
{{   $packages = concat $packages (list
       "build-essential"
       "clang"
       "libelf-dev"
       "llvm"
       "protobuf-compiler"
       "python3-pip"
       "vagrant"
       ) -}}
{{   $classicSnaps = concat $classicSnaps (list
       "google-cloud-sdk") -}}
{{ end -}}

{{ if not .headless -}}
{{   $packages = mustAppend $packages "vim-gtk" -}}
{{   $classicSnaps = mustAppend $classicSnaps "code" -}}
{{ end -}}

{{ if .personal -}}
{{   $classicSnaps = mustAppend $classicSnaps "goreleaser" -}}
{{ end -}}

{{ $sudo := "sudo " -}}
{{ if eq .chezmoi.username "root" -}}
{{   $sudo = "" -}}
{{ end -}}

#!/bin/sh

#set -eufo pipefail

{{- if .is_linux -}}
{{ $sudo }}apt-get update
{{ $sudo }}apt-get install -y {{ $packages | join " " }}
{{- end -}}

## Install nvm
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
nvm install v16.4.2 2>/dev/null
nvm alias default v16.4.2 2>/dev/null

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

## Install pyenv
{{ if eq .chezmoi.os "darwin" }}
brew install pyenv
{{ end -}}

## Install poetry
curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -

## Install starship
{{ if eq .chezmoi.os "darwin" }}
curl -sS https://starship.rs/install.sh | sh
{{ end -}}

## Install antigen
{{ if eq .chezmoi.os "darwin" }}
brew install antigen
{{ else if eq .chezmoi.os "linux" }}
curl -L git.io/antigen > ~/.config/zsh/antigen.zsh
{{- end }}

## Installing rust
{{ if .is_mac -}}
 ## Install rust
{{ else if .is_linux }}
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
{{- end }}

# https://github.com/racer-rust/emacs-racer#installation
rustup toolchain add nightly
rustup component add rust-src
cargo +nightly install racer

echo "Installing: starship ********************"
sh -c "$(curl -fsSL https://starship.rs/install.sh)" -- --yes

if [[ ! -d "$HOME/.oh-my-zsh/themes/spaceship-prompt" ]]; then
  git clone https://github.com/spaceship-prompt/spaceship-prompt.git "$HOME/.oh-my-zsh/themes/spaceship-prompt" --depth=1
fi

# Install nvm
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash

# Install spacemacs
#git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d

# Install yarn
npm i -g corepack

source $HOME/.cargo/env

#{{ range $classicSnaps }}
#{{ $sudo }}snap install --classic {{ . }}
#{{ end }}

## Install cargo-edit
cargo install cargo-edit

{{ if eq .chezmoi.os "darwin"}}
 ## Install just
 brew install just
{{ else if eq .chezmoi.os "linux" }}
  cargo install just
{{- end }}

echo "Installing: powerlevel10k"
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

echo "Installing: nvim ********************"
DISPLAY= pip3 install --user pynvim
curl -LO https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
chmod u+x nvim.appimage
mv nvim.appimage /usr/local/bin/nvm
nvm install 16
nvm alias default 16

echo "Installing: lunarvim ******************"
{{ if (eq .chezmoi.os "linux" "darwin") }}
wget -O /tmp/install_lvim.sh https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh
chmod u+x /tmp/install_lvim.sh
DISPLAY= /tmp/install_lvim.sh -y
{{ end -}}

echo "Installing nerd fonts ****************"
{{ if (eq .chezmoi.os "darwin") }}
git clone https://github.com/ronniedroid/getnf.git /tmp/getnf
cd /tmp/getnf
./install.sh
{{ end -}}

# Install fzf
if [ ! -d "$HOME/.fzf" ]
then
    echo "fzf could not be found, installing now"
    git clone --depth 1 https://github.com/junegunn/fzf.git $HOME/.fzf
    $HOME/.fzf/install --bin
fi

# Install oh my zsh
if [ ! -d "$HOME/.oh-my-zsh" ]
then
    echo "Oh-My-Zsh is not installed, installing now"
    git clone https://github.com/ohmyzsh/ohmyzsh.git $HOME/.oh-my-zsh
fi

echo "Setting up zsh ******************************"
sudo chsh -s /bin/zsh $(whoami)

{{ end }}
