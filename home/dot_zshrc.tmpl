# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Prevent console output from breaking instant prompt
typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

# Environment settings
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
{{ if eq .chezmoi.os "linux" -}}
export EDITOR=$HOME/.local/bin/nvim
{{ else -}}
export EDITOR=nvim
{{ end -}}
export VISUAL=$EDITOR
export GOPATH=$HOME
export GO111MODULE=on
{{- if eq .chezmoi.os "darwin" }}
export HOMEBREW_NO_AUTO_UPDATE=1
{{- end }}

# Path management
typeset -U path
path=(
  $HOME/bin
  $HOME/go/bin
  $HOME/.cargo/bin
  $HOME/.local/bin
  $path
)

# Oh-My-Zsh configuration
export ZSH=$HOME/.oh-my-zsh
ZSH_THEME="powerlevel10k/powerlevel10k"
CASE_SENSITIVE="true"
DISABLE_AUTO_UPDATE="true"
HIST_STAMPS="yyyy-mm-dd"
ZSH_DISABLE_COMPFIX=true

# Source Oh-My-Zsh
source $ZSH/oh-my-zsh.sh

# Load plugins from custom location
if [ -f "$HOME/.zsh-plugins/zsh-autosuggestions/zsh-autosuggestions.zsh" ]; then
  source "$HOME/.zsh-plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
fi

if [ -f "$HOME/.zsh-plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
  source "$HOME/.zsh-plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi

# Shell options
setopt autocd
setopt histignorespace
setopt rm_star_silent
setopt appendhistory
setopt histignorealldups
setopt extendedglob
setopt interactivecomments
setopt share_history
setopt hist_ignore_dups
setopt hist_ignore_space

# History configuration
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

# Essential aliases
alias g=git
alias gnp="git --no-pager"
{{- if lookPath "bat" }}
alias cat=bat
{{- else if lookPath "batcat" }}
alias cat=batcat
{{- end }}
{{- if lookPath "eza" }}
alias ls=eza
{{- else }}
alias ls='ls -G'
{{- end }}
alias ll='ls -alFh'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'
alias grep='grep --color=auto'
alias vi='vim'

# Git aliases
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git pull'
alias gpush='git push'
alias gl='git log --oneline --graph --decorate'

# Tmux aliases
alias tn='tmux new-session -s'
alias ta='tmux attach -t'
alias tl='tmux list-sessions'
alias tk='tmux kill-session -t'

# Tool integrations
# mise activation
[ -f "$HOME/.local/bin/mise" ] && eval "$($HOME/.local/bin/mise activate zsh)"

# pnpm setup
{{- if eq .chezmoi.os "darwin" }}
export PNPM_HOME="$HOME/Library/pnpm"
{{- else }}
export PNPM_HOME="$HOME/.local/share/pnpm"
{{- end }}
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

# direnv integration
command -v direnv &> /dev/null && eval "$(direnv hook zsh)"

# nvm setup
{{ if stat (joinPath .chezmoi.homeDir ".nvm") }}
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
{{ end }}

# 1Password integration
{{- if and (hasKey . "onepasswordAccount") .personal }}
if command -v op &> /dev/null; then
  export OP_ACCOUNT="{{ .onepasswordAccount }}"
  
  function op_get_secret() {
    local item="$1"
    local field="${2:-credential}"
    op item get "$item" --fields "$field" --no-auth-prompt 2>/dev/null || echo ""
  }
  
  alias op-signin="op signin --account $OP_ACCOUNT"
  alias op-signout="op signout --account $OP_ACCOUNT"
  alias op-status="op account get --account $OP_ACCOUNT 2>/dev/null && echo 'Authenticated' || echo 'Not authenticated'"
  
  if op account get --account "$OP_ACCOUNT" --no-auth-prompt &>/dev/null; then
    GITHUB_TOKEN=$(op_get_secret "chezmoi GitHub API Token")
    [ ! -z "$GITHUB_TOKEN" ] && export CHEZMOI_GITHUB_ACCESS_TOKEN="$GITHUB_TOKEN"
    
    {{- if eq .chezmoi.os "darwin" }}
    HOMEBREW_TOKEN=$(op_get_secret "Homebrew GitHub API Token")
    [ ! -z "$HOMEBREW_TOKEN" ] && export HOMEBREW_GITHUB_API_TOKEN="$HOMEBREW_TOKEN"
    {{- end }}
  fi
fi
{{- end }}

# Load local configuration files
for dir in $HOME/.config/zsh/features $HOME/.config/private/zsh/features; do
  if [ -d "$dir" ]; then
    for file in "$dir"/*.zsh; do
      [ -f "$file" ] && source "$file"
    done
  fi
done

# Load local customizations
[ -f "$HOME/.zshenv" ] && source "$HOME/.zshenv"
[ -f "$HOME/.zshrc.local" ] && source "$HOME/.zshrc.local"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

